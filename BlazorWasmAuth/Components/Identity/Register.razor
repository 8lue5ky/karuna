@page "/register"
@using System.ComponentModel.DataAnnotations
@using Frontend.Identity
@using Frontend.Identity.Models
@inject IAccountManagement Acct
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>Register</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudPaper Elevation="3" Class="rounded-lg pa-4">
        <MudText Typo="Typo.h4" GutterBottom>Register</MudText>

        <AuthorizeView>
            <Authorized Context="authContext">
                <MudAlert Severity="Severity.Info" Class="mb-4">
                    You're already logged in as @authContext.User.Identity?.Name.
                </MudAlert>
            </Authorized>

            <NotAuthorized Context="notAuthContext">
                @if (formResult.Succeeded)
                {
                    <MudAlert Severity="Severity.Success" Class="mb-4">
                        You successfully registered. You can now
                        <MudLink Href="login">login</MudLink>.
                    </MudAlert>
                }
                else
                {
                    @if (formResult.ErrorList.Any())
                    {
                        @foreach (var error in formResult.ErrorList)
                        {
                            <MudAlert Severity="Severity.Error" Dense="true" Class="mb-2">@error</MudAlert>
                        }
                    }

                    <EditForm Model="Input" OnValidSubmit="RegisterUserAsync" Context="formContext">
                        <DataAnnotationsValidator />

                        <MudText Typo="Typo.subtitle1" Class="mb-2">Register a new account</MudText>
                        <MudDivider Class="mb-4" />

                        <MudTextField @bind-Value="Input.Email"
                                      Label="Email"
                                      For="() => Input.Email"
                                      Required="true"
                                      Variant="Variant.Outlined"
                                      FullWidth="true"
                                      Adornment="Adornment.Start"
                                      AdornmentIcon="@Icons.Material.Filled.Email"
                                      Margin="Margin.Dense" />

                        <MudTextField @bind-Value="Input.Password"
                                      Label="Password"
                                      For="() => Input.Password"
                                      Required="true"
                                      Variant="Variant.Outlined"
                                      FullWidth="true"
                                      InputType="InputType.Password"
                                      Adornment="Adornment.Start"
                                      AdornmentIcon="@Icons.Material.Filled.Lock"
                                      Margin="Margin.Dense" />

                        <MudTextField @bind-Value="Input.ConfirmPassword"
                                      Label="Confirm Password"
                                      For="() => Input.ConfirmPassword"
                                      Required="true"
                                      Variant="Variant.Outlined"
                                      FullWidth="true"
                                      InputType="InputType.Password"
                                      Adornment="Adornment.Start"
                                      AdornmentIcon="@Icons.Material.Filled.Lock"
                                      Margin="Margin.Dense" />

                        <MudButton ButtonType="ButtonType.Submit"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   FullWidth="true"
                                   Class="mt-4">
                            Register
                        </MudButton>

                        <MudText Class="mt-4" Align="Align.Center">
                            <MudLink Href="login">Already have an account? Log in</MudLink>
                        </MudText>
                    </EditForm>
                }
            </NotAuthorized>
        </AuthorizeView>
    </MudPaper>
</MudContainer>

@code {
    private FormResult formResult = new();

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    public async Task RegisterUserAsync()
    {
        formResult = await Acct.RegisterAsync(Input.Email, Input.Password);

        if (formResult.Succeeded)
        {
            Snackbar.Add("Registration successful!", Severity.Success);
        }
        else
        {
            Snackbar.Add("Registration failed.", Severity.Error);
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } = string.Empty;

        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = string.Empty;

        [Required]
        [DataType(DataType.Password)]
        [Compare("Password", ErrorMessage = "Passwords do not match.")]
        [Display(Name = "Confirm Password")]
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}